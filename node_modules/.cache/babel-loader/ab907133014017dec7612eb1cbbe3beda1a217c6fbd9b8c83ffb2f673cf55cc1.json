{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhuyn\\\\snake-game\\\\src\\\\App.js\";\nimport * as React from \"react\";\nimport './App.css';\n\n//grid\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst gridScale = 25;\nconst rows = 26;\nconst cols = 26;\nconst gridHeight = rows * gridScale;\nconst gridWidth = cols * gridScale;\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.changeDirection = e => {\n      if (e.code == \"ArrowUp\" && this.velocityY != 1) {\n        this.velocityX = 0;\n        this.velocityY = -1;\n      } else if (e.code == \"ArrowDown\" && this.velocityY != -1) {\n        this.velocityX = 0;\n        this.velocityY = 1;\n      } else if (e.code == \"ArrowLeft\" && this.velocityX != 1) {\n        this.velocityX = -1;\n        this.velocityY = 0;\n      } else if (e.code == \"ArrowRight\" && this.velocityX != -1) {\n        this.velocityX = 1;\n        this.velocityY = 0;\n      }\n    };\n    this.startGame = () => {\n      this.setState(prevState => {\n        return {\n          ...prevState,\n          showButton: false\n        };\n      });\n      if (this.state.intervalId) {\n        this.stopGame();\n        return;\n      }\n      this.setState({\n        score: 0\n      });\n      this.randFood();\n      document.addEventListener(\"keyup\", this.changeDirection);\n      const newIntervalId = setInterval(() => {\n        this.update();\n      }, 100);\n      this.setState(prevState => {\n        return {\n          ...prevState,\n          intervalId: newIntervalId\n        };\n      });\n    };\n    this.stopGame = () => {\n      document.removeEventListener(\"keyup\", this.changeDirection);\n      clearInterval(this.state.intervalId);\n      this.setState(prevState => {\n        return {\n          ...prevState,\n          intervalId: 0,\n          showButton: true\n        };\n      });\n      this.context = this.gridRef.current.getContext(\"2d\");\n      this.context.fillStyle = \"black\";\n      this.context.fillRect(0, 0, gridWidth, gridHeight);\n      this.snakeX = gridScale * 13;\n      this.snakeY = gridScale * 13;\n      this.velocityX = 0;\n      this.velocityY = 0;\n      this.snakeBody = [];\n      this.foodX = 0;\n      this.foodY = 0;\n      this.gameLose = false;\n      this.setState(prevState => {\n        return {\n          ...prevState,\n          showButton: true\n        };\n      });\n    };\n    this.randFood = () => {\n      this.foodX = Math.floor(Math.random() * cols) * gridScale;\n      this.foodY = Math.floor(Math.random() * rows) * gridScale;\n    };\n    this.update = () => {\n      if (this.gameLose) {\n        this.stopGame();\n        alert(\"Game Over!\\nScore: \" + this.state.score);\n        return;\n      }\n      this.context = this.gridRef.current.getContext(\"2d\");\n      this.context.fillStyle = \"black\";\n      this.context.fillRect(0, 0, gridWidth, gridHeight);\n      if (this.foodBlink) {\n        this.context.fillStyle = \"black\";\n        this.foodBlink = 0;\n      } else {\n        this.context.fillStyle = \"yellow\";\n        this.foodBlink = 1;\n      }\n      this.context.fillRect(this.foodX, this.foodY, gridScale, gridScale);\n      if (this.snakeX == this.foodX && this.snakeY == this.foodY) {\n        this.snakeBody.push([this.foodX, this.foodY]);\n        this.setState({\n          score: this.state.score + 1\n        });\n        this.randFood();\n      }\n      for (let i = this.snakeBody.length - 1; i >= 0; i--) {\n        this.snakeBody[i] = this.snakeBody[i - 1];\n      }\n      if (this.snakeBody.length) {\n        this.snakeBody[0] = [this.snakeX, this.snakeY];\n      }\n      this.context = this.gridRef.current.getContext(\"2d\");\n      this.context.fillStyle = \"purple\";\n      this.snakeX += this.velocityX * gridScale;\n      this.snakeY += this.velocityY * gridScale;\n      this.context.fillRect(this.snakeX, this.snakeY, gridScale, gridScale);\n      for (let i = 0; i < this.snakeBody.length; i++) {\n        this.context.fillRect(this.snakeBody[i][0], this.snakeBody[i][1], gridScale, gridScale);\n      }\n\n      // game lose conditions\n      if (this.snakeX < 0 || this.snakeX >= gridWidth || this.snakeY < 0 || this.snakeY >= gridHeight) {\n        this.gameLose = true;\n      }\n      for (let i = 0; i < this.snakeBody.length; i++) {\n        if (this.snakeX == this.snakeBody[i][0] && this.snakeY == this.snakeBody[i][1]) {\n          this.gameLose = true;\n        }\n      }\n    };\n    this.state = {\n      score: 0,\n      startSnake: 0,\n      intervalId: 0,\n      showButton: true\n    };\n    this.gridRef = /*#__PURE__*/React.createRef();\n    this.snakeX = gridScale * 13;\n    this.snakeY = gridScale * 13;\n    this.velocityX = 0;\n    this.velocityY = 0;\n    this.snakeBody = [];\n    this.foodX = 0;\n    this.foodY = 0;\n    this.gameLose = false;\n    this.foodBlink = 0;\n  }\n  componentDidMount() {\n    this.context = this.gridRef.current.getContext(\"2d\");\n    this.context.fillStyle = \"black\";\n    this.context.fillRect(0, 0, gridWidth, gridHeight);\n  }\n  componentWillUnmount() {}\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"snake-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"snake-left-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"snake-info-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"snake-name\",\n            children: \"Snake Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"snake-keys\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Use arrow keys to move the snake!\", '\\n']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"The snake is \", /*#__PURE__*/_jsxDEV(\"text\", {\n                style: {\n                  background: 'purple'\n                },\n                children: \"purple\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 45\n              }, this), \" and the food is \", /*#__PURE__*/_jsxDEV(\"text\", {\n                style: {\n                  background: 'yellow'\n                },\n                children: \"yellow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 111\n              }, this), \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n            className: \"grid\",\n            ref: this.gridRef,\n            width: gridWidth,\n            height: gridHeight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), this.state.showButton && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"snake-button\",\n            onClick: () => {\n              this.startGame();\n            },\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"snake-right-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"snake-right-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"snake-score-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"snake-score-text\",\n              children: \"SCORE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"snake-bord\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"snake-score\",\n                children: this.state.score\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","gridScale","rows","cols","gridHeight","gridWidth","App","Component","constructor","props","changeDirection","e","code","velocityY","velocityX","startGame","setState","prevState","showButton","state","intervalId","stopGame","score","randFood","document","addEventListener","newIntervalId","setInterval","update","removeEventListener","clearInterval","context","gridRef","current","getContext","fillStyle","fillRect","snakeX","snakeY","snakeBody","foodX","foodY","gameLose","Math","floor","random","alert","foodBlink","push","i","length","startSnake","createRef","componentDidMount","componentWillUnmount","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","background","ref","width","height","onClick"],"sources":["C:/Users/bhuyn/snake-game/src/App.js"],"sourcesContent":["import * as React from \"react\";\nimport './App.css';\n\n//grid\nconst gridScale = 25;\nconst rows = 26;\nconst cols = 26;\nconst gridHeight = rows * gridScale;\nconst gridWidth = cols * gridScale;\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            score: 0,\n            startSnake: 0,\n            intervalId: 0,\n            showButton: true,\n        };\n        this.gridRef = React.createRef();\n        this.snakeX = gridScale * 13;\n        this.snakeY = gridScale * 13;\n        this.velocityX = 0;\n        this.velocityY = 0;\n        this.snakeBody = [];\n        this.foodX = 0;\n        this.foodY = 0;\n        this.gameLose = false;\n        this.foodBlink = 0;\n    }\n\n    changeDirection = (e) =>{\n        if (e.code == \"ArrowUp\" && this.velocityY != 1) {\n            this.velocityX = 0;\n            this.velocityY = -1;\n        }\n        else if (e.code == \"ArrowDown\" && this.velocityY != -1) {\n            this.velocityX = 0;\n            this.velocityY = 1;\n        }\n        else if (e.code == \"ArrowLeft\" && this.velocityX!= 1) {\n            this.velocityX = -1;\n            this.velocityY = 0;\n        }\n        else if (e.code == \"ArrowRight\" && this.velocityX!= -1) {\n            this.velocityX = 1;\n            this.velocityY = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.context = this.gridRef.current.getContext(\"2d\");\n\n        this.context.fillStyle = \"black\";\n        this.context.fillRect(0, 0, gridWidth, gridHeight);\n    }\n\n    componentWillUnmount() {\n    }\n\n    startGame = () => {\n        this.setState(prevState => {\n            return {\n              ...prevState,\n              showButton: false,\n            };\n        });\n        if (this.state.intervalId) {\n            this.stopGame();\n            return;\n        }\n        this.setState({score: 0});\n        this.randFood();\n        document.addEventListener(\"keyup\", this.changeDirection);\n        const newIntervalId = setInterval(() => {\n            this.update();\n        }, 100);\n        this.setState(prevState => {\n            return {\n              ...prevState,\n              intervalId: newIntervalId,\n            };\n        });\n    }\n\n    stopGame = () => {\n        document.removeEventListener(\"keyup\", this.changeDirection);\n        clearInterval(this.state.intervalId);\n        this.setState(prevState => {\n            return {\n                ...prevState,\n                intervalId: 0,\n                showButton: true,\n            };\n        });\n        this.context = this.gridRef.current.getContext(\"2d\");\n        this.context.fillStyle = \"black\";\n        this.context.fillRect(0, 0, gridWidth, gridHeight);\n        this.snakeX = gridScale * 13;\n        this.snakeY = gridScale * 13;\n        this.velocityX = 0;\n        this.velocityY = 0;\n        this.snakeBody = [];\n        this.foodX = 0;\n        this.foodY = 0;\n        this.gameLose = false;\n        this.setState(prevState => {\n            return {\n              ...prevState,\n              showButton: true,\n            };\n        });\n    }\n\n    randFood = () => {\n        this.foodX = Math.floor(Math.random() * cols) * gridScale;\n        this.foodY = Math.floor(Math.random() * rows) * gridScale;\n    }\n\n    update = () => {\n        if (this.gameLose) {\n            this.stopGame();\n            alert(\"Game Over!\\nScore: \" + this.state.score);\n            return;\n        }\n        this.context = this.gridRef.current.getContext(\"2d\");\n        this.context.fillStyle = \"black\";\n        this.context.fillRect(0, 0, gridWidth, gridHeight);\n\n        if (this.foodBlink) {\n            this.context.fillStyle = \"black\";\n            this.foodBlink = 0;\n        } else {\n            this.context.fillStyle = \"yellow\";\n            this.foodBlink = 1;\n        }\n        this.context.fillRect(this.foodX, this.foodY, gridScale, gridScale);\n\n        if (this.snakeX == this.foodX && this.snakeY == this.foodY) {\n            this.snakeBody.push([this.foodX, this.foodY]);\n            this.setState({score: this.state.score + 1});\n            this.randFood(); \n        }\n\n        for (let i = this.snakeBody.length - 1; i >= 0; i--) {\n            this.snakeBody[i] = this.snakeBody[i-1];\n        }\n        if (this.snakeBody.length) {\n            this.snakeBody[0] = [this.snakeX, this.snakeY];\n        }\n\n        this.context = this.gridRef.current.getContext(\"2d\");\n        this.context.fillStyle = \"purple\";\n        this.snakeX += this.velocityX * gridScale;\n        this.snakeY += this.velocityY * gridScale;\n        this.context.fillRect(this.snakeX, this.snakeY, gridScale, gridScale);\n        for (let i = 0; i < this.snakeBody.length; i++) {\n            this.context.fillRect(this.snakeBody[i][0], this.snakeBody[i][1], gridScale, gridScale);\n        }\n\n        // game lose conditions\n        if (this.snakeX < 0 || this.snakeX >= gridWidth || this.snakeY < 0 || this.snakeY >= gridHeight) {\n            this.gameLose = true;\n        }\n\n        for (let i = 0; i < this.snakeBody.length; i++) {\n            if (this.snakeX == this.snakeBody[i][0] && this.snakeY == this.snakeBody[i][1]) {\n                this.gameLose = true;\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"snake-container\">\n                <div className=\"snake-left-container\">\n                    <div className=\"snake-info-wrapper\">\n                        <div className=\"snake-name\">Snake Game</div>\n                        <div className=\"snake-keys\">\n                            <p>Use arrow keys to move the snake!{'\\n'}</p>\n                            <p>The snake is <text style={{background:'purple'}}>purple</text> and the food is <text \n                                style={{background:'yellow'}}>yellow</text>.</p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"grid-container\">\n                    <div className=\"grid-wrapper\">\n                        <canvas className=\"grid\" ref={this.gridRef} width={gridWidth} height={gridHeight}></canvas>\n                        {this.state.showButton && <button className=\"snake-button\" onClick={() => {this.startGame()}}>Start</button>}\n                    </div>\n                </div>\n                <div className=\"snake-right-container\">\n                    <div className=\"snake-right-wrapper\">\n                        <div className=\"snake-score-wrapper\">\n                            <div className=\"snake-score-text\">SCORE</div>\n                            <div className=\"snake-bord\">\n                                <div className=\"snake-score\">{this.state.score}</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}